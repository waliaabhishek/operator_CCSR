## Overriding values for Chart's values.yaml
## Example values to run Confluent Operator in GCP
global:
  provider:
    name: gcp
    region: us-central1
    kubernetes:
       deployment:
         ## If kubernetes is deployed in multi zone mode then specify availability-zones as appropriate
         ## If kubernetes is deployed in single availability zone then specify appropriate values
         zones:
          - us-central1-c
    storage:
      ## https://kubernetes.io/docs/concepts/storage/storage-classes/#gce
      ##
      provisioner: kubernetes.io/gce-pd
      ## Use Retain if you want to persist data after CP cluster has been uninstalled
      reclaimPolicy: Delete
      parameters:
        type: pd-ssd
        fstype: ext4
        replication-type: none
    ## Docker registry endpoint where Confluent Images are available.
    ##
    registry:
      fqdn: docker.io
      credential:
        required: false
  sasl:
    plain:
      username: "CCLOUD KEY"
      password: "CCLOUD SECRET"

## Zookeeper cluster
##
zookeeper:
  name: zookeeper
  replicas: 3
  resources:
    requests:
      cpu: 200m
      memory: 512Mi

## Kafka Cluster
##
kafka:
  name: kafka
  replicas: 3
  resources:
    requests:
      cpu: 200m
      memory: 1Gi
  loadBalancer:
    enabled: false
    domain: ""
  tls:
    enabled: false
    fullchain: |-
    privkey: |-
    cacerts: |-
  metricReporter:
    enabled: false

## Connect Cluster
##
connect:
  name: connectors
  replicas: 1
  resources:
    requests:
      cpu: 200m
      memory: 2Gi
  tls:
    enabled: false
  loadBalancer:
    enabled: true
    domain: "ps.abhishek.test"
  disableHostPort: true
  schemas:
    enabled: true
  key:
    converter: io.confluent.connect.avro.AvroConverter
  value:
    converter: io.confluent.connect.avro.AvroConverter
  dependencies:
    kafka:
      tls:
        enabled: true
        internal: true
        authentication:
          type: "plain"
      brokerCount: 0
      bootstrapEndpoint: "CCLOUD BROKER URL"
    schemaRegistry:
      enabled: true
      url: "SR CCLOUD URL"
      authentication:
        type: basic
        source: USER_INFO
        username: "SR API KEY"
        password: "SR API SECRET"

## Replicator Connect Cluster
##
replicator:
  name: replicator
  replicas: 2
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      brokerCount: 3
      bootstrapEndpoint: kafka:9071
##
## Schema Registry
##
schemaregistry:
  name: schemaregistry
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      brokerCount: 3
      bootstrapEndpoint: kafka:9071

##
## KSQL
##
ksql:
  name: ksql
  replicas: 2
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      brokerCount: 3
      bootstrapEndpoint: kafka:9071
      brokerEndpoints: kafka-0.kafka:9071,kafka-1.kafka:9071,kafka-2.kafka:9071
    schemaRegistry:
      enabled: false
      tls:
        enabled: false
        authentication:
          type: ""
      url: http://schemaregistry:8081

## Control Center (C3) Resource configuration
##
controlcenter:
  name: controlcenter
  license: ""
  ##
  ## C3 dependencies
  ##
  resources:
    requests:
      cpu: 200m
      memory: 4Gi
  dependencies:
    c3KafkaCluster:
      tls:
        enabled: true
        internal: true
        authentication:
          type: "plain"
      brokerCount: 0
      bootstrapEndpoint: "CCLOUD BROKER URL"
    connectCluster:
      enabled: true
      url: http://connectors:8083
    ksql:
      enabled: false
      url: http://ksql:9088
    schemaRegistry:
      enabled: false
      url: http://schemaregistry:8081
  ##
  ## C3 External Access
  ##
  loadBalancer:
    enabled: false
    domain: "ps.abhishek.test"
  ##
  ## TLS configuration
  ##
  tls:
    enabled: false
    authentication:
      type: "plain"
    fullchain: |-
    privkey: |-
    cacerts: |-
  ##
  ## C3 authentication
  ##
  auth:
    basic:
      enabled: true
      ##
      ## map with key as user and value as password and role
      property:
        admin: Developer1,Administrators
        disallowed: no_access
